{"version":3,"sources":["components/square/square.component.jsx","components/board/board.component.jsx","components/info/info.component.jsx","patterns.js","components/game/game.component.jsx","App.js","reportWebVitals.js","index.js"],"names":["Square","value","playerTurn","style","onClick","className","Board","board","Info","result","person","useState","firstPlayerScore","setScoreFirst","secondPlayerScore","setScoreSecond","tie","setTie","useEffect","winner","state","Patterns","Game","setPerson","Array","fill","setBoard","player","setPlayer","setResult","prompt","checkWin","checkIfTie","restartGame","forEach","currentPattern","firstPlayer","foundWinningPattern","index","filled","square","map","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.129d4db0.chunk.js","sourcesContent":["import React from 'react'\r\nimport './square.styles.scss'\r\n\r\n\r\nfunction Square({ value, playerTurn}) {\r\n    const style = value ? `square ${value}` : `square`\r\n    return (\r\n\r\n        <div onClick={playerTurn} className={style}>\r\n            {value}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Square","import React from 'react'\r\nimport './board.styles.scss'\r\nimport Square from '../square/square.component'\r\n\r\nfunction Board({board, playerTurn}) {\r\n    return (\r\n        <div className='board'>\r\n            <div className='row'>\r\n                <Square value={board[0]} playerTurn={() => { playerTurn(0) }} />\r\n                <Square value={board[1]} playerTurn={() => { playerTurn(1) }} />\r\n                <Square value={board[2]} playerTurn={() => { playerTurn(2) }} />\r\n            </div>\r\n            <div className='row'>\r\n                <Square value={board[3]} playerTurn={() => { playerTurn(3) }} />\r\n                <Square value={board[4]} playerTurn={() => { playerTurn(4) }} />\r\n                <Square value={board[5]} playerTurn={() => { playerTurn(5) }} />\r\n            </div>\r\n            <div className='row'>\r\n                <Square value={board[6]} playerTurn={() => { playerTurn(6) }} />\r\n                <Square value={board[7]} playerTurn={() => { playerTurn(7) }} />\r\n                <Square value={board[8]} playerTurn={() => { playerTurn(8) }} />\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Board","import React, { useEffect, useState } from 'react'\r\nimport './info.styles.scss'\r\n\r\nconst Info = ({ result, person }) => {\r\n    const [firstPlayerScore, setScoreFirst] = useState(0)\r\n    const [secondPlayerScore, setScoreSecond] = useState(0)\r\n    const [tie, setTie] = useState(0)\r\n\r\n    useEffect(() => {\r\n    if (result.winner == 'X') {setScoreFirst(firstPlayerScore + 1)}\r\n    if (result.winner == 'O') {setScoreSecond(secondPlayerScore + 1)}\r\n    if (result.state == 'Ничья') {setTie(tie + 1)}\r\n    },[result]\r\n    )\r\n    \r\n    return (\r\n        <div className='info'>\r\n            <span>Score</span>\r\n            <span>{person}: {firstPlayerScore}</span>\r\n            <span>Player2: {secondPlayerScore}</span>\r\n            <span>Ничья: {tie}</span>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Info","export const Patterns = [\r\n    [0, 1, 2],\r\n    [3, 4, 5],\r\n    [6, 7, 8],\r\n    [0, 3, 6],\r\n    [1, 4, 7],\r\n    [2, 5, 8],\r\n    [0, 4, 8],\r\n    [2, 4, 6]\r\n]","import React, { useState, useEffect } from 'react'\r\nimport Board from '../board/board.component'\r\nimport Info from '../info/info.component'\r\nimport './game.styles.scss'\r\nimport { Patterns } from '../../patterns'\r\n\r\nconst Game = () => {\r\n \r\n    const [person, setPerson] = useState('Player1')\r\n    const [board, setBoard] = useState(Array(9).fill(''))\r\n    const [player, setPlayer] = useState('X')\r\n    const [result, setResult] = useState({ winner: 'none', state: 'none' })\r\n\r\n    useEffect(()=>{\r\n        setPerson(prompt('Укажите свое имя: '))\r\n    },[]\r\n    )\r\n\r\n    useEffect(() => {\r\n        checkWin()\r\n        checkIfTie()\r\n        player == 'O' ? setPlayer('X') : setPlayer('O')\r\n    }, [board])\r\n\r\n    useEffect(() => {\r\n        if (result.state != 'none') {\r\n            restartGame()\r\n        }\r\n    }, [result])\r\n\r\n    const playerTurn = (square) => {\r\n        setBoard(board.map((value, index) => {\r\n            if (index == square && value == '') {\r\n                return player\r\n            }\r\n            return value\r\n        }))\r\n    }\r\n\r\n    const checkWin = () => {\r\n        Patterns.forEach((currentPattern) => {\r\n            const firstPlayer = board[currentPattern[0]]\r\n            if (firstPlayer == '') return\r\n            let foundWinningPattern = true\r\n            currentPattern.forEach((index) => {\r\n                if (board[index] != firstPlayer) {\r\n                    foundWinningPattern = false\r\n                }\r\n            })\r\n            if (foundWinningPattern) {\r\n                setResult({ winner: player, state: 'Победа' })\r\n            }\r\n        })\r\n    }\r\n\r\n    const checkIfTie = () => {\r\n        let filled = true\r\n        board.forEach((square) => {\r\n            if (square == \"\") {\r\n                filled = false\r\n            }\r\n        })\r\n\r\n        if (filled) {\r\n            setResult({ winner: 'Ничья', state: 'Ничья' })\r\n        }\r\n    }\r\n\r\n    const restartGame = () => {\r\n        setBoard(Array(9).fill(''))\r\n        setPlayer('O')\r\n    }\r\n\r\n    return (\r\n        <div className='game-panel'>\r\n            <Board board={board} playerTurn={playerTurn}/>\r\n            <Info result={result} person={person}/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Game","import './App.css';\nimport Game from './components/game/game.component';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Game/>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}